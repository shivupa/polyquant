name: Polyquant CMake Build
on:
  push:
  pull_request:
  release:
    tags:
      - 'v*'

jobs:
  cmake-build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu_Latest_GCC_Release_Ninja",
            os: ubuntu-latest,
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            generators: "Ninja"
          }
          - {
            name: "Ubuntu_Latest_GCC_Debug_Ninja",
            os: ubuntu-latest,
            build_type: "Debug",
            cc: "gcc",
            cxx: "g++",
            generators: "Ninja"
          }

    steps:
      - name: checkout project
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: checkout libint project
        uses: actions/checkout@v2
        with:
          ref: 'libint'
          submodules: recursive
      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: libint.yml
          workflow_conclusion: success
          name: polyquant-libint.deb
      - name: Install dependencies on Ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu_Latest_GCC')
        run: |
          sudo apt-get update
          sudo apt-get install \
            ninja-build \
            cmake \
            libeigen3-dev \
            libboost-all-dev \
            intel-mkl \
            libhdf5-dev
          ninja --version
          cmake --version
          gcc --version
          sudo dpkg -i polyquant-libint.deb
          mkdir builddir
          echo $MKLROOT
          ls /opt
          ls /usr/local
      - name: Configure
        shell: bash
        working-directory: builddir
        run: |
          cmake \
            -DPOLYQUANT_DOC=0 \
            -DPOLYQUANT_TEST=1 \
            -DPOLYQUANT_CODE_COVERAGE=0 \
            -DCMAKE_C_COMPILER=gcc \
            -DCMAKE_CXX_COMPILER=g++ \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -DLIBINT2_INCLUDE_DIR=$GITHUB_WORKSPACE \
            -G "${{ matrix.config.generators }}" \
            ..
      - name: Build
        shell: bash
        working-directory: builddir
        run: cmake --build . --config ${{ matrix.config.build_type }}
      - name: Test
        shell: bash
        working-directory: builddir
        run: ctest
