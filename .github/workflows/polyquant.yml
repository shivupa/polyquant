name: Polyquant CMake Build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    tags:
      - 'v*'

jobs:
  cmake-build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu_Latest_GCC11_Release_Ninja",
            os: ubuntu-latest,
            build_type: "Release",
            pkgs: "gcc-11 g++-11",
            cc: "gcc-11",
            cxx: "g++-11",
            generators: "Ninja"
          }
          - {
            name: "Ubuntu_Latest_GCC11_Debug_Ninja",
            os: ubuntu-latest,
            build_type: "Debug",
            pkgs: "gcc-11 g++-11",
            cc: "gcc-11",
            cxx: "g++-11",
            generators: "Ninja"
          }
          - {
            name: "Ubuntu_Latest_GCC12_Release_Ninja",
            os: ubuntu-latest,
            build_type: "Release",
            pkgs: "gcc-12 g++-12",
            cc: "gcc-12",
            cxx: "g++-12",
            generators: "Ninja"
          }
          - {
            name: "Ubuntu_Latest_GCC12_Debug_Ninja",
            os: ubuntu-latest,
            build_type: "Debug",
            pkgs: "gcc-12 g++-12",
            cc: "gcc-12",
            cxx: "g++-12",
            generators: "Ninja"
          }
          - {
            name: "Ubuntu_Latest_Clang13_Release_Ninja",
            os: ubuntu-latest,
            build_type: "Release",
            pkgs: "clang-13 llvm-13-dev libomp-13-dev",
            cc: "clang-13",
            cxx: "clang++-13",
            generators: "Ninja"
          }
          - {
            name: "Ubuntu_Latest_Clang13_Debug_Ninja",
            os: ubuntu-latest,
            build_type: "Debug",
            pkgs: "clang-13 llvm-13-dev libomp-13-dev",
            cc: "clang-13",
            cxx: "clang++-13",
            generators: "Ninja"
          }
          - {
            name: "Ubuntu_Latest_Clang14_Release_Ninja",
            os: ubuntu-latest,
            build_type: "Release",
            pkgs: "clang-14 llvm-14-dev libomp-14-dev",
            cc: "clang-14",
            cxx: "clang++-14",
            generators: "Ninja"
          }
          - {
            name: "Ubuntu_Latest_Clang14_Debug_Ninja",
            os: ubuntu-latest,
            build_type: "Debug",
            pkgs: "clang-14 llvm-14-dev libomp-14-dev",
            cc: "clang-14",
            cxx: "clang++-14",
            generators: "Ninja"
          }
    steps:
      - name: checkout project
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v9
        with:
          workflow: libint.yml
          workflow_conclusion: success
          name: polyquant-libint.deb
      - name: Install dependencies on Ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu_Latest')
        run: |
          sudo apt-get update
          sudo apt-get install \
            ninja-build \
            cmake \
            libboost-all-dev \
            intel-mkl \
            liblapack-dev \
            libeigen3-dev \
            libhdf5-dev \
            ${{ matrix.config.pkgs }}
          ninja --version
          cmake --version
          ${{ matrix.config.cc }} --version
          sudo dpkg -i polyquant-libint.deb
          mkdir builddir
          echo $MKLROOT
          ls /usr/share/libint/*/basis/
      - name: Install libmsym
        run: |
          git clone https://github.com/mcodev31/libmsym.git
          cd libmsym
          mkdir build
          cd build
          # build as shared library; build examples (built in ./examples,  not installed)
          cmake -DBUILD_SHARED_LIBS:BOOL=ON -DMSYM_BUILD_EXAMPLES:BOOL=ON ../.
          make
          sudo make install
      - name: Create a directory that the libint imported target requires. DO NOT DELETE THIS STEP.
        shell: bash
        run: |
          mkdir $GITHUB_WORKSPACE/libint2
      - name: Configure
        shell: bash
        working-directory: builddir
        env:
          CC: matrix.config.cc
          CXX: matrix.config.cxx
          MKLROOT: /usr/include/mkl
        run: |
          cmake \
            -DPOLYQUANT_DOC=0 \
            -DPOLYQUANT_TEST=1 \
            -DPOLYQUANT_CODE_COVERAGE=0 \
            -DCMAKE_C_COMPILER=${{ matrix.config.cc }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -G "${{ matrix.config.generators }}" \
            ..
      - name: Build
        shell: bash
        working-directory: builddir
        run: cmake --build . --config ${{ matrix.config.build_type }}
      - name: Test
        shell: bash
        working-directory: builddir
        env:
          LIBINT_DATA_PATH: /usr/share/libint/2.7.2/basis/
        run: ctest --output-on-failure
